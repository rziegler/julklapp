package ch.bbv.julklapp;

import java.util.Collection;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Query;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;

import ch.bbv.julklapp.persistence.Circle;
import ch.bbv.julklapp.persistence.EMF;

@Path("/circles")
public class CircleResource {

	@GET
	@Produces("text/plain")
	@Path("/{name}")
	public String createCircle(@PathParam("name") String name) {
		EntityManager em = EMF.get().createEntityManager();
		try {
			Circle circle = new Circle();
			circle.setName(name);
			em.getTransaction().begin();
			em.persist(circle);
			em.getTransaction().commit();
		} finally {
			em.close();
		}
		return "Saved new circle " + name;
	}
	
	@GET
	@Produces("text/plain")
	@Path("/")
	public String getCircles(@PathParam("name") String name) {
		EntityManager em = EMF.get().createEntityManager();
		try {
			Circle circle = new Circle();
			circle.setName(name);
			Query query = em.createQuery("SELECT c FROM Circle c");
			List<Circle> circles = query.getResultList();

			StringBuilder builder = new StringBuilder();
			for (Circle c : circles) {
				builder.append(c.getName());
				builder.append(", ");
			}
		} finally {
			em.close();
		}
		return "Saved new circle " + name;
	}
}
